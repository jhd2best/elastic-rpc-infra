name: Creates a harmony binary from a branch

on:
  workflow_dispatch:
    inputs:
      branch:
        description: Harmony branch to build
        required: true
        default: main
      owner:
        description: Harmony branch to build
        required: true
        default: harmony-one

jobs:
  check:
    name: Per-check for current tag
    runs-on: ubuntu-20.04
    continue-on-error: false
    outputs:
      tag_annotated: ${{ steps.check-tag-annotated.outputs.tag_annotated }}

    steps:
      - name: Checkout harmony core code
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.inputs.owner }}/harmony
          path: harmony
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: 0

      - name: Check tag annotated
        id: check-tag-annotated
        run: |
          VERSION=$(git tag -l --sort=-v:refname | head -n 1)
          if git rev-parse $VERSION^{tag} -- &>/dev/null
          then
            echo "::set-output name=tag_annotated::true"
          else
            echo "::set-output name=tag_annotated::false"
          fi
        working-directory: harmony

  build:
    name: Build harmony binary
    needs: check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]

    steps:
      - name: Set up Go 1.18
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.4

      - name: Checkout dependence repo
        uses: actions/checkout@v2
        with:
          repository: harmony-one/mcl
          path: mcl

      - name: Checkout dependence repo
        uses: actions/checkout@v2
        with:
          repository: harmony-one/bls
          path: bls

      - name: Checkout harmony core code
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.inputs.owner }}/harmony
          path: harmony
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: 0

      - name: Get latest version and release
        run: |
          VERSION=$(git tag -l --sort=-v:refname | head -n 1 | tr -d v)
          RELEASE=$(git describe --long | cut -f2 -d-)
          echo "build_version=$VERSION" >> $GITHUB_ENV
          echo "build_release=$RELEASE" >> $GITHUB_ENV
        working-directory: harmony

      - name: Build harmony binary and packages for Linux
        if: matrix.os == 'ubuntu-20.04'
        run: |
          make linux_static
          mv ./bin/harmony ./bin/harmony-amd64
        working-directory: harmony

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: harmony
          path: harmony/bin/*
          retention-days: 1